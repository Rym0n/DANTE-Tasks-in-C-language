Co było pierwsze? Kura, jajko czy królik?


main.c

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "functions.h"
#include "tested_declarations.h"
#include "rdebug.h"

int main()
{
    srand(time(0));
    int x;
    printf("Podaj liczbe funkcji do wygenerowania: ");
    int err = scanf("%d", &x);
    if (err != 1) {
        printf("Incorrect input");
        return 1;
    }
    if (x <= 0) {
        printf("Incorrect input data");
        return 2;
    }
    void (**funcs)(void) = easter(x, print_chicken, print_egg, print_rabbit);
    if (!funcs) {
        printf("Failed to allocate memory");
        return 8;
    }
    for (int i = 0; i < x; ++i) {
        (*(funcs+i))();
        printf("\n");
    }
    free(funcs);
    return 0;
}


functions.h

#ifndef FUNC
#define FUNC

void print_chicken(void);
void print_egg(void);
void print_rabbit(void);
void (**easter(int size, void (*fir)(void), void (*sec)(void), void (*thi)(void)))(void);

#endif

functions.c
#include <stdio.h>
#include <stdlib.h>
#include "functions.h"
#include "tested_declarations.h"
#include "rdebug.h"

void print_chicken(void)
{
    printf(" MM\n<' \\___/|\n  \\_  _/\n    ][\n");
}
void print_egg(void)
{
    printf("  .~~~.\n /     \\\n(\\/\\/\\/\\)\n \\     /\n  `~~~`\n");
}
void print_rabbit(void)
{
    printf(" \\\\   //\n  )\\-/(\n  /o o\\\n ( =T= )\n /'---'\\\n");
}
void (**easter(int size, void (*fir)(void), void (*sec)(void), void (*thi)(void)))(void)
{
    if (size <= 0 || !fir || !sec || !thi) return NULL;
    void (**funcs)(void)=(void(**)())malloc(size * 8);
    if (!funcs) return NULL;
    for (int i = 0; i < size; ++i) {
        int x=rand()%3;
        if (x == 0) *(funcs+i)=fir;
        else if (x == 1) *(funcs+i)=sec;
        else *(funcs+i)=thi;
    }
    return funcs;
}
